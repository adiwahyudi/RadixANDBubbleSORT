# -*- coding: utf-8 -*-
"""Tugas Besar AKA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TjFRi4Lc2YOuzKBFlaFxbA_KI-I7e7YP

# **TUGAS BESAR ANALISIS KOMPLEKSITAS ALGORITMA**
***Radix Sort dan Bubble Sort***

oleh :


1.   **I Wayan Adi Wahyudi - 1301194084**

# **Import dan Function tambahan**
"""

import time

# Fungsi yang akan membuat list yang berisikan elemen yang sudah diacak
def create_random_list (length):

    import random

    random_list = list(range(0,length))
    random.shuffle(random_list)

    return random_list

"""# **Radix Sort**"""

waktu_radix = []

""" Dibawah akan melakukan Counting Sort , dimana
    Counting Sort fungsinya untuk mengurut element di basis tempat yang signifikan. 
"""
def countingSort(array,place):
        size = len(array)
        output = [0] * size
        count = [0] * 10

        # Melakukan perhitungan element
        for i in range(0, size):
            index = array[i] // place
            count[index % 10] += 1

        # Melakukan perhitungan jumlah kumulatif
        for i in range(1, 10):
            count[i] += count[i - 1]
        # Meletakan elemen secara terurut
        i = size - 1
        while i >= 0:
            index = array[i] // place
            output[count[index % 10] - 1] = array[i]
            count[index % 10] -= 1
            i -= 1

        for i in range(0, size):
            array[i] = output[i]

def radixSort(array):
    # Mencari Element dengan nilai tertinggi dan di waktu eksekusi dimulai
    start_time = time.time()
    max_element = max(array)

    # Melakukan implementasi dari Counting Sort
    place = 1
    while max_element // place > 0:
        countingSort(array,place)
        place *= 10
    selesai = time.time() - start_time
    waktu_radix.append(selesai)
    print("Radix Sort","\t:" ,selesai, "seconds")

"""# **Bubble Sort**"""

# Bubble Sort
waktu_bubble = []
def bubbleSort(array): 
    start_time = time.time()
    n = len(array)
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if array[j] > array[j+1] : 
                array[j], array[j+1] = array[j+1], array[j] 
    selesai = time.time() - start_time
    waktu_bubble.append(selesai)
    print("Bubble Sort","\t:" ,selesai, "seconds")

"""# **Benchmark**"""

# Benchmark Radix Sort dan Bubble Sort
print("\n\t Running Time Radix Sort dan Bubble Sort\n")
n = [10,100,1000,10000,100000]
for i in n:
    print("Untuk n \t:",i)
    temp = create_random_list(i)
    radixSort(temp)
    bubbleSort(temp)
    print(" ")

"""# **Visualisasi Data**"""

import matplotlib.pyplot as plt

def graphData(waktu_data1,waktu_data2,n):
  fig = plt.figure()
  fig.patch.set_facecolor('white')

  plt.plot(n,waktu_data1,label="Radix Sort")
  plt.plot(n,waktu_data2,label="Bubble Sort")

  plt.xlabel("Banyak data")
  plt.ylabel("Waktu (seconds)")
  plt.title("Perbandingan Radix dan Bubble",fontweight="bold")
  plt.grid(alpha=0.4)
  plt.legend()

  plt.show()

graphData(waktu_radix,waktu_bubble,n)
